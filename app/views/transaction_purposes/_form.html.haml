= form_with(model: object, remote: true) do |f|
  - if object.errors.any?
    #error_explanation
      %p= "#{pluralize(object.errors.count, "error")} prohibited this transaction_purpose from being saved:"
      %ul
        - object.errors.full_messages.each do |message|
          %li= message
  .row
    = f.label :name
    = f.text_field :name, id: :transaction_purpose_name
  .row
    = f.label :sub_category_id
    = f.collection_select :sub_category_id, SubCategory.all, :id, :name_with_category, id: :transaction_purpose_sub_category_id
  .row
    = f.label :estimate
    = f.amount_field :estimate, id: :transaction_purpose_estimate, currency: '&#8377;'
  .row.recurrence_rule_form
    = render 'recurrence_rule_form', f: f
  - if object.persisted?
    .row
      = f.label :created_at
      .input-group
        = f.datetime_select :created_at, {order: [:day, :month, :year], date_separator: ' / '}, id: :transaction_purpose_created_at, class: 'input-group-field small-2', disabled: true
    .row
      = f.label :updated_at
      .input-group
        = f.datetime_select :updated_at, {order: [:day, :month, :year], date_separator: ' / '}, id: :transaction_purpose_updated_at, class: 'input-group-field small-2', disabled: true
  .row
    = f.submit object.new_record? ? 'Create' : 'Update', class: 'button success'
    = link_to 'Back', transaction_purposes_path, class: 'button warning'
